// Mocks generated by Mockito 5.0.7 from annotations
// in events_feed/test/application/add_content_form/add_content_form_notifier_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:events_feed/domain/add_content_form_failure.dart' as _i5;
import 'package:events_feed/domain/add_content_form_repository.dart' as _i3;
import 'package:events_feed/domain/shared/age/positive_number.dart' as _i11;
import 'package:events_feed/domain/shared/post/description/description.dart'
    as _i8;
import 'package:events_feed/domain/shared/post/title/title.dart' as _i7;
import 'package:events_feed/domain/shared/unique_id/unique_id.dart' as _i6;
import 'package:events_feed/domain/shared/user.dart' as _i10;
import 'package:google_maps_flutter_platform_interface/src/types/location.dart'
    as _i9;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeEither<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [AddContentFormRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddContentFormRepository extends _i1.Mock
    implements _i3.AddContentFormRepository {
  MockAddContentFormRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<
      _i2.Either<_i5.AddContentFormFailure, _i6.UniqueId>> insertNewContent(
          {DateTime? eventDate,
          _i7.Title? title,
          _i8.Description? description,
          _i9.LatLng? location,
          _i10.User? currentUser,
          _i11.PositiveNumber? maximumPeople}) =>
      (super.noSuchMethod(
          Invocation.method(#insertNewContent, [], {
            #eventDate: eventDate,
            #title: title,
            #description: description,
            #location: location,
            #currentUser: currentUser,
            #maximumPeople: maximumPeople
          }),
          returnValue: Future<
                  _i2.Either<_i5.AddContentFormFailure, _i6.UniqueId>>.value(
              _FakeEither<_i5.AddContentFormFailure, _i6.UniqueId>())) as _i4
          .Future<_i2.Either<_i5.AddContentFormFailure, _i6.UniqueId>>);
  @override
  _i4.Future<_i2.Either<_i5.AddContentFormFailure, _i2.Unit>> editContent(
          {_i6.UniqueId? id,
          DateTime? eventDate,
          _i7.Title? title,
          _i8.Description? description,
          _i9.LatLng? location,
          _i11.PositiveNumber? maximumPeople}) =>
      (super.noSuchMethod(
              Invocation.method(#editContent, [], {
                #id: id,
                #eventDate: eventDate,
                #title: title,
                #description: description,
                #location: location,
                #maximumPeople: maximumPeople
              }),
              returnValue:
                  Future<_i2.Either<_i5.AddContentFormFailure, _i2.Unit>>.value(
                      _FakeEither<_i5.AddContentFormFailure, _i2.Unit>()))
          as _i4.Future<_i2.Either<_i5.AddContentFormFailure, _i2.Unit>>);
}
